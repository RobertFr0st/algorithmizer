void sort_doubles(vector <double> &v, int print)
{
  // Turn into a heap where the root is the maximum element 
  for (int i = v.size()/2; i >= 0; i--) {
    int ok = 1;
    index = i;
    while (ok) {      
      int lc = index*2+1;
      int rc = lc+1;
      if (lc >= v.size()) {
        ok = 0; 
      } else if (rc == v.size() || v[lc] >= v[rc]) {
        if (v[lc] > v[index]) {
          tmpswap(commandlist, v, lc, index)
          index = lc;
        } else {
          ok = 0;
        }
      } else if (v[rc] > v[index]) {
        tmpswap(commandlist, v, rc, index)
        index = rc;
      } else {
        ok = 0;
      }
    }
  }

  // Now remove each element from the root of the heap and put it at the end of the array,
  // and percolate down.

  for (int i = v.size()-1; i > 0; i--) {
    tmpswap(commandlist, v, i, 0)
    int ok = 1;
    index = 0;
    while (ok) {      
      int lc = index*2+1;
      int rc = lc+1;
      if (lc >= i) {
        ok = 0; 
      } else if (rc == i || v[lc] >= v[rc]) {
        if (v[lc] > v[index]) {
          tmpswap(commandlist, v, lc, index)
          index = lc;
        } else {
          ok = 0;
        }
      } else if (v[rc] > v[index]) {
        tmpswap(commandlist, v, rc, index)
        index = rc;
      } else {
        ok = 0;
      }
    }
  }
}
